#!/bin/python
import subprocess, re

command = "acpi -b"
charging_command = "acpi -a"

batteryProcess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)
battery_output, error = batteryProcess.communicate()
battery_output=battery_output.decode("utf-8")

chargingProcess = subprocess.Popen(charging_command.split(), stdout=subprocess.PIPE)
charging_output, error = chargingProcess.communicate()
charging_output = charging_output.decode("utf-8")


batteryPattern = re.compile('[0-9]+: (\w+)?, (\d+)?%(, ([\d:]{0,5})?)?')
m = batteryPattern.search(battery_output)
state=m.group(1)
level = int(m.group(2))
if state == 'Unknown':
    time = ''
else:
    time=m.group(3).replace(',', '').replace(' ', '')
percent="{}%".format(level)

chargingPattern = re.compile('Adapter (\d+): ([a-z]+)-line')
m = chargingPattern.search(charging_output)
adapterN = m.group(1)
adapState = m.group(2)

if adapState.lower() == 'on':
    charging_icon=''
else:
    charging_icon=''

#color='<span foreground="#ccd4e2">'
color = None

if level > 90:
    # color="<span foreground='#FFFFFF'>"
    icon=''
elif level > 60:
    # color="<span foreground='#00FFAA'>"
    icon=''
elif level > 40:
    # color="<span foreground='#FFAA33'>"
    icon=''
elif level > 15:
    # color="<span foreground='#FF7700'>"
     icon=''
else:
    color="<span foreground='#FF0000'>"
    icon=''

if color is None:
    if time != '':
        print("{}  {}  {} {}".format(charging_icon, icon, percent, time))
    else:
        print("{}  {}  {} ".format(charging_icon, icon, percent))
else:
    if time != '':
        print("{}{}  {}  {}</span> {}".format(color, charging_icon, icon, percent, time))
    else:
        print("{}{}  {}  {}</span> ".format(color, charging_icon, icon, percent))





